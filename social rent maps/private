<!DOCTYPE html>
<html>
<head>
  <meta charset='utf-8' />
  <title>Display a map</title>
  <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
  <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.53.0/mapbox-gl.js'></script>
  <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.53.0/mapbox-gl.css' rel='stylesheet' />
  <style>
    body {
      margin: 0;
      padding: 0;
    }
    #map {
      position: absolute;
      top: 0;
      bottom: 0;
      width: 100%;
    }
    h1 {
      font-size: 16px;
      line-height: 30px;
      color: black;
      font-family: Helvetica;
    }
    h2 {
      font-size: 14px;
      line-height: 20px;
      margin-bottom: 10px；
      color: black;
      font-family: Helvetica;
    }
    a {
      text-decoration: none;
      color: #2dc4b2;
      font-family: Helvetica;
    }

    #console {
      position: absolute;
      width: 240px;
      margin: 10px;
      padding: 10px 20px;
      background-color: white;
      opacity: 0.7;
    }
    .session {
      margin-bottom: 20px;
      color: #2dc4b2;
    }
    .row {
      height: 12px;
      width: 100%；
    }
    .colors {
      background: linear-gradient(to right, #2dc4b2, #3bb3c3, #669ec4, #8b88b6, #a2719b, #aa5e79);
      margin-bottom: 5px;
    }
    .label {
      width: 15%;
      display: inline-block;
      text-align: center;
      text-color: 'rgb(199,199,199,100)'
    }
    .mapboxgl-popup {
      max-width: 400px;
      font: 12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif;
    }
    p{
      color: black
    }
  </style>
</head>
<body>


  <style>
    #fly {
      display: block;
      position: relative;
      margin: 0px auto;
      width: 20%;
      height: 40px;
      padding: 10px;
      border: none;
      border-radius: 3px;
      font-size: 12px;
      text-align: center;
      color: black;
      background: white
      background-opacity: 0.7;
    }
  </style>




  <div id='map'></div>
  <br/>
  <button id='fly'>Fly</button>
  <div id='console'>
    <h1>Private Own Social Housing Rent</h1>
    <p>Data: The average private own social housing rent in UK from 2014 to 2017</p>
    <div class='session'>
      <h2>Total rent</h2>
      <div class='row colors'>
      </div>
      <div class='row labels'>
        <div class='label'>71</div>
        <div class='label'>86</div>
        <div class='label'>101</div>
        <div class='label'>116</div>
        <div class='label'>131</div>
        <div class='label'>147+</div>
      </div>
    </div>
    <div class='session' id='sliderbar'>
      <h2>Year: <label id='active-year'>2014</label></h2>
      <input id='slider' class='row' type='range' min='2014' max='2017' step='1' value='0' />
    </div>
    <div class='session'>
      <h2>Type of charge</h2>
      <div class='row' id='filters'>
        <input id='all' type='radio' name='toggle' value='all' checked='checked'>
        <label for='all'>Weekly Rent</label>
        <input id='Weekly' type='radio' name='toggle' value='Weekly' >
        <label for='Weekly'>Service Charge</label>
      </div>
    </div>
  </div>

  <script>
    mapboxgl.accessToken = 'pk.eyJ1Ijoiam9hbm5hemhvdSIsImEiOiJjanY1cjhwdTUxdDI4M3lvYjFnMTB6ejVyIn0.daDuLibhR42z9EbKYs7z7Q';
    const map = new mapboxgl.Map({
      container: 'map',
      style: 'mapbox://styles/joannazhou/cjvdn1kww5b3d1fpnlgvlzs8p',
      center: [-2.54, 53.03],
      zoom: 5.3
    });

    document.getElementById('fly').addEventListener('click', function () {
// Fly to a random location by offsetting the point -74.50, 40
// by up to 5 degrees.
map.flyTo({
  center: [
  -0.14,
  51.51],
  zoom: 11,
  bearing: 0
});
});

    map.on('load', function() {

      map.addLayer({
        id: 'price-heatmap',
        type: 'heatmap',
        source: {
          type: 'vector',
  url: 'mapbox://joannazhou.c697k0fx' // Your Mapbox tileset Map ID
},
  'source-layer': 'hebing-8twnae', // name of tilesets
  'layout': {
    'visibility': 'visible'
  },
  "maxzoom": 9,
  "paint": {
    // Increase the heatmap weight based on frequency and rent
    "heatmap-weight": [
    "interpolate",
    ["linear"],
    ["get", "value"],
    71, 0,
    169, 1
    ],
  // Increase the heatmap color weight weight by zoom level
  // heatmap-intensity is a multiplier on top of heatmap-weight
  "heatmap-intensity": [
  "interpolate",
  ["linear"],
  ["zoom"],
  0, 1,
  9, 3
  ],
  // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).
  // Begin color ramp at 0-stop with a 0-transparancy color
  // to create a blur-like effect.
  "heatmap-color": [
  "interpolate",
  ["linear"],
  ["heatmap-density"],
  0, "rgba(33,102,172,0)",
  0.2, "rgb(103,169,207)",
  0.4, "rgb(209,229,240)",
  0.6, "rgb(253,219,199)",
  0.8, "rgb(239,138,98)",
  1, "rgb(178,24,43)"
  ],
  // Adjust the heatmap radius by zoom level
  "heatmap-radius": [
  "interpolate",
  ["linear"],
  ["zoom"],
  0, 2,
  9, 20
  ],
  // Transition from heatmap to circle layer by zoom level
  "heatmap-opacity": [
  "interpolate",
  ["linear"],
  ["zoom"],
  7, 1,
  9, 0
  ],
}
}, 'waterway-label');

      map.addLayer({
        id: 'price-circle',
        type: 'circle',
        source: {
          type: 'vector',
  url: 'mapbox://joannazhou.c697k0fx' // Your Mapbox tileset Map ID
},
  'source-layer': 'hebing-8twnae', // name of tilesets
  'layout': {
    'visibility': 'visible'
  },
  minzoom: 7,
  paint: {
    'circle-radius': [
    'interpolate',
    ['linear'],
    ['number', ['get', 'value']],
    71, 4,
    147, 24
    ],
    'circle-color': [
    'interpolate',
    ['linear'],
    ['number', ['get', 'value']],
    71, '#2DC4B2',
    86, '#3BB3C3',
    101, '#669EC4',
    116, '#8B88B6',
    131, '#A2719B',
    147, '#AA5E79'
    ],
    'circle-opacity': 0.8
  }
});

      map.addLayer({
        id: 'price-fill',
        type: 'fill',
        source: {
          type: 'vector',
  url: 'mapbox://joannazhou.9x7okull' // Your Mapbox tileset Map ID
},
  'source-layer': 'shapefiledata-91x1z8', // name of tilesets
  'layout': {
    'visibility': 'visible'
  },
  paint: {
    'fill-color': 'rgba(254, 254, 254, 0)',
  }
});

      map.addLayer({
        id: 'price-labels',
        type: 'symbol',
        source: {
          type: 'vector',
    url: 'mapbox://joannazhou.c697k0fx' // Your Mapbox tileset Map ID
  },
    'source-layer': 'hebing-8twnae', // name of tilesets
    'layout': {
      'text-field': '£{value}',
      'text-font': ['Open Sans Bold', 'Arial Unicode MS Bold'],
      'text-size': 12
    },
    'paint': {
      'text-color': 'rgba(0,0,0,0.5)'
    }
  });

      filter: ['==', ['number', ['get', 'year']], 2014]

      document.getElementById('slider').addEventListener('input', function(e) {
        var year = parseInt(e.target.value);
  // update the map
  map.setFilter('price-circle', ['==', ['number', ['get', 'year']], year]);
  map.setFilter('price-heatmap', ['==', ['number', ['get', 'year']], year]);
  map.setFilter('price-labels', ['==', ['number', ['get', 'year']], year]);
  // update text in the UI
  document.getElementById('active-year').innerText = year;
});

      document.getElementById('filters').addEventListener('change', function(e) {
        var type = e.target.value;
  // update the map filter
  if (type === 'all') {
    filterType = ['!=', ['string', ['get', 'typr']], 'placeholder'];
  } else if (type === 'Weekly') {
    filterType = ['match', ['get', 'typr'], ['rent mean'], false, true];
  } else {
    console.log('error');
  }
  map.setFilter('price-heatmap', ['all', filterType]);
  map.setFilter('price-circle', ['all', filterType]);
  map.setFilter('price-labels', ['all', filterType]);
});


// When a click event occurs on a feature in the states layer, open a popup at the
// location of the click, with description HTML from its properties.
map.on('click', 'price-fill', function (e) {
  new mapboxgl.Popup()
  .setLngLat(e.lngLat)
  .setHTML(e.features[0].properties.lad18nm)
  .addTo(map);
});

// Change the cursor to a pointer when the mouse is over the states layer.
map.on('mouseenter', 'price-fill', function () {
  map.getCanvas().style.cursor = 'pointer';
});

// Change it back to a pointer when it leaves.
map.on('mouseleave', 'price-fill', function () {
  map.getCanvas().style.cursor = '';
});
});
</script>

</body>
</html>
